Index: src/rsitimer.cpp
===================================================================
--- src/rsitimer.cpp	(revision 991336)
+++ src/rsitimer.cpp	(working copy)
@@ -26,6 +26,7 @@
 #include <kdebug.h>
 #include <kconfig.h>
 #include <kconfiggroup.h>
+#include <kidle.h>
 
 // The order here is important, otherwise Qt headers are preprocessed into garbage.... :-(
 
@@ -39,7 +40,6 @@
 
 #include "rsiglobals.h"
 #include "rsistats.h"
-#include "rsitimer_dpms.h"
 #include <QTimerEvent>
 #include <QThread>
 #include <kglobal.h>
@@ -53,8 +53,6 @@
         , m_needRestart( false )
         , m_explicitDebug( false )
         , m_pause_left( 0 ), m_relax_left( 0 )
-        , dpmsOff( -10 ), dpmsStandby( -10 ), dpmsSuspend( -10 )
-        , m_lastActivity( QDateTime::currentDateTime() )
         , m_intervals( RSIGlobals::instance()->intervals() )
 {
 }
@@ -131,37 +129,9 @@
     checkScreensaverMode();
     hibernationDetector();
 
-#ifdef HAVE_LIBXSS      // Idle detection.
-    XScreenSaverInfo*  _mit_info;
-    _mit_info = XScreenSaverAllocInfo();
-    XScreenSaverQueryInfo( QX11Info::display(), QX11Info::appRootWindow(), _mit_info );
-    totalIdle = ( _mit_info->idle / 1000 );
-    XFree( _mit_info );
+    int totalIdleMs = KIdleTime::instance()->idleTime();
+    totalIdle = totalIdleMs == 0 ? 0 : totalIdleMs/1000;
 
-
-    // When dpms turns off the monitor the idle gets a reset to 0
-    // Eat the activity in that area. Bug 6439 bugs.freedesktop.org
-    int t = m_lastActivity.secsTo( QDateTime::currentDateTime() );
-
-    // refresh timings when there is idleness for 6 minutes, should be
-    // enough to have values before it is needed.
-    if ( t == 3600 ) {
-        QueryDPMSTimeouts( QX11Info::display(), dpmsStandby, dpmsSuspend, dpmsOff );
-        kDebug() << "DPMS settings: " << dpmsStandby << " - "
-        << dpmsSuspend << " - " << dpmsOff << endl;
-    }
-
-    if ( totalIdle == 0 && ( t < dpmsOff - 1     || t > dpmsOff + 1 )
-            && ( t < dpmsStandby - 1 || t > dpmsStandby + 1 )
-            && ( t < dpmsSuspend - 1 || t > dpmsSuspend + 1 ) )
-        m_lastActivity = QDateTime::currentDateTime();
-    else
-        totalIdle = m_lastActivity.secsTo( QDateTime::currentDateTime() );
-
-#else
-    totalIdle = m_pause_left > 0 ? 1 : 0;
-#endif // HAVE_LIBXSS
-
     return totalIdle;
 }
 
@@ -305,9 +275,6 @@
 
 void RSITimer::timerEvent( QTimerEvent * )
 {
-    // although we might be suspended, we still want to return a valid value
-    // when restarted, so m_lastActivity shouls still be updated. This way
-    // the dbus call to idleTime() does not return false info.
     int t = idleTime();
 
     // Don't change the tray icon when suspended, or evaluate
@@ -374,7 +341,7 @@
         return;
     }
 
-    if (m_explicitDebug) {
+    if (m_explicitDebug || true) {
       kDebug() << " patience: " << m_patience  << " pause_left: "
       << m_pause_left << " relax_left: " << m_relax_left
       <<  " tiny_left: " << m_tiny_left  << " big_left: "
Index: src/rsiwidget.h
===================================================================
--- src/rsiwidget.h	(revision 991336)
+++ src/rsiwidget.h	(working copy)
@@ -64,6 +64,8 @@
         return m_currentIcon;
     };
 
+    static QPixmap takeScreenshot( int screen );
+
 private slots:
     void slotWelcome();
     void slotLock();
Index: src/rsitimer_dpms.cpp
===================================================================
--- src/rsitimer_dpms.cpp	(revision 991336)
+++ src/rsitimer_dpms.cpp	(working copy)
@@ -1,75 +0,0 @@
-/* This file is part of the KDE project
-   Copyright (C) 2006 Tom Albers <tomalbers@kde.nl>
-
-   This program is free software; you can redistribute it and/or
-   modify it under the terms of the GNU General Public
-   License as published by the Free Software Foundation; either
-   version 2 of the License, or (at your option) any later version.
-
-   This program is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   General Public License for more details.
-
-   You should have received a copy of the GNU General Public License
-   along with this program; if not, write to the Free Software
-   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
-*/
-
-#include <QPixmap>
-
-#include <X11/Xutil.h>
-#include <X11/extensions/dpms.h>
-
-#include <QX11Info>
-#include <X11/Xlib.h>
-#include <X11/extensions/Xrender.h>
-
-#include <fixx11h.h>
-
-
-bool QueryDPMSTimeouts( Display* display, int& standby, int& suspend, int& off )
-{
-    bool result = false;
-    standby = 0;
-    suspend = 0;
-    off = 0;
-
-    int event_base;
-    int error_base;
-    CARD16 x_standby;
-    CARD16 x_suspend;
-    CARD16 x_off;
-
-    if ( DPMSQueryExtension( display, &event_base, &error_base ) )
-        if ( DPMSCapable( display ) )
-            if ( DPMSGetTimeouts( display, &x_standby, &x_suspend, &x_off ) ) {
-                standby = ( int )x_standby;
-                suspend = ( int )x_suspend;
-                off     = ( int )x_off;
-                result  = true;
-            }
-    return result;
-}
-
-QPixmap takeScreenshot( int screen )
-{
-    Display *dpy = QX11Info::display();
-    Window root = QX11Info::appRootWindow();
-    int width = DisplayWidth( dpy, screen );
-    int height = DisplayHeight( dpy, screen );
-    QPixmap pix( width, height );
-
-    XRenderPictureAttributes attr;
-    attr.subwindow_mode = IncludeInferiors;
-
-    XRenderPictFormat *format = XRenderFindVisualFormat( dpy, DefaultVisual( dpy, screen ) );
-    Picture rootPict = XRenderCreatePicture( dpy, root, format, CPSubwindowMode, &attr );
-
-    XRenderComposite( dpy, PictOpSrc, rootPict, None, pix.x11PictureHandle(),
-                      0, 0, 0, 0, 0, 0, width, height );
-
-    XRenderFreePicture( dpy, rootPict );
-    return pix;
-}
-
Index: src/CMakeLists.txt
===================================================================
--- src/CMakeLists.txt	(revision 991336)
+++ src/CMakeLists.txt	(working copy)
@@ -16,10 +16,7 @@
 CONFIGURE_FILE( ../config-rsibreak.h.cmake
                 ${CMAKE_CURRENT_BINARY_DIR}/src/config-rsibreak.h    )
 
-############ librsibreak #####################################################
 
-KDE4_ADD_LIBRARY(librsibreak STATIC rsitimer_dpms.cpp)
-
 ############ rsibreak ########################################################
 
 # source files needed
@@ -55,7 +52,7 @@
 
 ########### linking #####################
 
-TARGET_LINK_LIBRARIES(rsibreak ${KDE4_KIO_LIBS} ${KDE4_KNOTIFYCONFIG_LIBS} librsibreak ${IDLE_DETECTION_LIB} )
+TARGET_LINK_LIBRARIES(rsibreak ${KDE4_KIO_LIBS} ${KDE4_KNOTIFYCONFIG_LIBS} ${IDLE_DETECTION_LIB} kidle )
 
 ########### install files ###############
 
Index: src/rsiwidget.cpp
===================================================================
--- src/rsiwidget.cpp	(revision 991336)
+++ src/rsiwidget.cpp	(working copy)
@@ -21,7 +21,6 @@
 #include "rsiwidgetadaptor.h"
 #include "graywidget.h"
 #include "slideshow.h"
-#include "rsitimer_dpms.h"
 #include "boxdialog.h"
 #include "rsitimer.h"
 #include "rsidock.h"
@@ -31,6 +30,11 @@
 
 #include <config-rsibreak.h>
 
+#include <X11/Xutil.h>
+#include <X11/extensions/Xrender.h>
+#include <fixx11h.h>
+
+
 #include <QDesktopWidget>
 #include <QPainter>
 #include <QTimer>
@@ -113,6 +117,27 @@
     delete RSIGlobals::instance();
 }
 
+QPixmap RSIObject::takeScreenshot( int screen )
+{
+    Display *dpy = QX11Info::display();
+    Window root = QX11Info::appRootWindow();
+    int width = DisplayWidth( dpy, screen );
+    int height = DisplayHeight( dpy, screen );
+    QPixmap pix( width, height );
+
+    XRenderPictureAttributes attr;
+    attr.subwindow_mode = IncludeInferiors;
+
+    XRenderPictFormat *format = XRenderFindVisualFormat( dpy, DefaultVisual( dpy, screen ) );
+    Picture rootPict = XRenderCreatePicture( dpy, root, format, CPSubwindowMode, &attr );
+
+    XRenderComposite( dpy, PictOpSrc, rootPict, None, pix.x11PictureHandle(),
+                      0, 0, 0, 0, 0, 0, width, height );
+
+    XRenderFreePicture( dpy, rootPict );
+    return pix;
+}
+
 void RSIObject::slotWelcome()
 {
     if ( KMessageBox::shouldBeShownContinue( "dont_show_welcome_again_for_001" ) ) {
Index: src/rsitimer.h
===================================================================
--- src/rsitimer.h	(revision 991336)
+++ src/rsitimer.h	(working copy)
@@ -259,11 +259,7 @@
     int             m_relax_left;
     int             m_useIdleDetection;
     int             m_ignoreIdleForTinyBreaks;
-    int             dpmsOff;
-    int             dpmsStandby;
-    int             dpmsSuspend;
 
-    QDateTime       m_lastActivity;
     /**
       When it's time for a break, we wait patiently till the user
       becomes idle. We show a relax popup during this interval.
Index: src/graywidget.cpp
===================================================================
--- src/graywidget.cpp	(revision 991336)
+++ src/graywidget.cpp	(working copy)
@@ -19,7 +19,7 @@
 
 #include "graywidget.h"
 #include "grayouteffect.h"
-#include "rsitimer_dpms.h"
+#include "rsiwidget.h"
 #include "boxdialog.h"
 
 #include <QApplication>
@@ -60,7 +60,7 @@
 
 void GrayWidget::slotGrayEffect()
 {
-    m_complete = takeScreenshot( QX11Info::appScreen() );
+    m_complete = RSIObject::takeScreenshot( QX11Info::appScreen() );
 
     repaint(); //before show
 
Index: src/rsitimer_dpms.h
===================================================================
--- src/rsitimer_dpms.h	(revision 991336)
+++ src/rsitimer_dpms.h	(working copy)
@@ -1,27 +0,0 @@
-/* This file is part of the KDE project
-   Copyright (C) 2006 Tom Albers <tomalbers@kde.nl>
-
-   This program is free software; you can redistribute it and/or
-   modify it under the terms of the GNU General Public
-   License as published by the Free Software Foundation; either
-   version 2 of the License, or (at your option) any later version.
-
-   This program is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   General Public License for more details.
-
-   You should have received a copy of the GNU General Public License
-   along with this program; if not, write to the Free Software
-   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
-
-*/
-
-#ifndef RSITimer_DPMS_H
-#define RSITimer_DPMS_H
-
-bool QueryDPMSTimeouts( Display* display, int& standby, int& suspend, int& off );
-
-QPixmap takeScreenshot( int );
-
-#endif
